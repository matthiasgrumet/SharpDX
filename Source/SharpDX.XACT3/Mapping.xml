<?xml version="1.0" encoding="utf-8"?>
<!--
// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
-->
<config id="sharpdx-xact3" xmlns="urn:SharpGen.Config">
  <depends>sharpdx</depends>
  <depends>sharpdx-xaudio2</depends>
  
  <namespace>SharpDX.XACT3</namespace>
  <assembly>SharpDX.XACT3</assembly>
  
  <include file="xact3.h" attach="true" >
    <filter-error>$(FILTER_PASTING_ERROR)</filter-error>
    <pre>
      #undef _X86_
    </pre>
    <post>
      #define MACRO_XACT_STATE_CREATED         XACT_STATE_CREATED
      #define MACRO_XACT_STATE_PREPARING       XACT_STATE_PREPARING
      #define MACRO_XACT_STATE_PREPARED        XACT_STATE_PREPARED
      #define MACRO_XACT_STATE_PLAYING         XACT_STATE_PLAYING
      #define MACRO_XACT_STATE_STOPPING        XACT_STATE_STOPPING
      #define MACRO_XACT_STATE_STOPPED         XACT_STATE_STOPPED
      #define MACRO_XACT_STATE_PAUSED          XACT_STATE_PAUSED
      #define MACRO_XACT_STATE_INUSE           XACT_STATE_INUSE
      #define MACRO_XACT_STATE_PREPAREFAILED   XACT_STATE_PREPAREFAILED

      #define MACRO_XACT_FLAG_API_AUDITION_MODE XACT_FLAG_API_AUDITION_MODE
      #define MACRO_XACT_FLAG_API_DEBUG_MODE XACT_FLAG_API_DEBUG_MODE

      #define MACRO_XACT_FLAG_STOP_RELEASE    XACT_FLAG_STOP_RELEASE
      #define MACRO_XACT_FLAG_STOP_IMMEDIATE  XACT_FLAG_STOP_IMMEDIATE

      #define MACRO_XACT_NOTIFICATIONTYPE_CUEPREPARED   XACTNOTIFICATIONTYPE_CUEPREPARED
      #define MACRO_XACT_NOTIFICATIONTYPE_CUEPLAY   XACTNOTIFICATIONTYPE_CUEPLAY
      #define MACRO_XACT_NOTIFICATIONTYPE_CUESTOP   XACTNOTIFICATIONTYPE_CUESTOP
      #define MACRO_XACT_NOTIFICATIONTYPE_CUEDESTROYED   XACTNOTIFICATIONTYPE_CUEDESTROYED
      #define MACRO_XACT_NOTIFICATIONTYPE_MARKER   XACTNOTIFICATIONTYPE_MARKER
      #define MACRO_XACT_NOTIFICATIONTYPE_SOUNDBANKDESTROYED   XACTNOTIFICATIONTYPE_SOUNDBANKDESTROYED
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVEBANKDESTROYED   XACTNOTIFICATIONTYPE_WAVEBANKDESTROYED
      #define MACRO_XACT_NOTIFICATIONTYPE_LOCALVARIABLECHANGED   XACTNOTIFICATIONTYPE_LOCALVARIABLECHANGED
      #define MACRO_XACT_NOTIFICATIONTYPE_GLOBALVARIABLECHANGED   XACTNOTIFICATIONTYPE_GLOBALVARIABLECHANGED
      #define MACRO_XACT_NOTIFICATIONTYPE_GUICONNECTED   XACTNOTIFICATIONTYPE_GUICONNECTED
      #define MACRO_XACT_NOTIFICATIONTYPE_GUIDISCONNECTED   XACTNOTIFICATIONTYPE_GUIDISCONNECTED
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVEPREPARED   XACTNOTIFICATIONTYPE_WAVEPREPARED
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVEPLAY   XACTNOTIFICATIONTYPE_WAVEPLAY
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVESTOP   XACTNOTIFICATIONTYPE_WAVESTOP
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVELOOPED   XACTNOTIFICATIONTYPE_WAVELOOPED
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVEDESTROYED   XACTNOTIFICATIONTYPE_WAVEDESTROYED
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVEBANKPREPARED   XACTNOTIFICATIONTYPE_WAVEBANKPREPARED
      #define MACRO_XACT_NOTIFICATIONTYPE_WAVEBANKSTREAMING_INVALIDCONTENT   XACTNOTIFICATIONTYPE_WAVEBANKSTREAMING_INVALIDCONTENT

      #define MACRO_XACT_FLAG_UNITS_MS   XACT_FLAG_UNITS_MS
      #define MACRO_XACT_FLAG_UNITS_SAMPLES      XACT_FLAG_UNITS_SAMPLES
      
      #define _X86_
    </post>
  </include>
  <include id="xact3wb" file="xact3wb.h" attach="true" />

  <extension>
    <context>sharpdx-xact3</context>
    <context>sharpdx-xact3-ext</context>
    <context>xact3</context>
    <context>xact3wb</context>

    <!-- Fake size -->
    <define struct="SharpDX.XACT3.RawNotification" sizeof="64" />

    <create-cpp enum="XACT_CUE_STATE" macro="XACT_CUESTATE_.*" />
    <create-cpp enum="XACT_WAVE_STATE" macro="MACRO_XACT_STATE_.*" />
    <create-cpp enum="XACT_STOP_FLAGS" macro="XACT_FLAG_CUE_STOP_.*" />
    <create-cpp enum="XACT_CREATION_FLAGS" macro="MACRO_XACT_FLAG_API_.*" />
    <create-cpp enum="WAVEBANKMINIFORMAT_TAG" macro="WAVEBANKMINIFORMAT_TAG_.*" />
    <create-cpp enum="XACT_NOTIFICATION_TYPE" macro="MACRO_XACT_NOTIFICATIONTYPE_.*" />
    <create-cpp enum="XACT_CONTENT_PREPARATION_FLAGS" macro="MACRO_XACT_FLAG_UNITS.*" />

    <const from-guid="CLSID_XACT(.*Engine)" class="SharpDX.XACT3.AudioEngine" type="System.Guid" name="$1Guid" visibility="internal">new System.Guid("$1")</const>

    <create class="XACT3"/>
    
    <context-clear />
  </extension>

  <bindings>
    <bind from="XACT_NOTIFICATION" to="SharpDX.XACT3.RawNotification" />
  </bindings>

  <mapping>
    <context>sharpdx-xact3-ext</context>
    <context>xact3</context>
    <context>xact3wb</context>

    <!--
    // *****************************************************************
    // XACT3 Enumerations
    // *****************************************************************
    -->
    <map enum="XACT_?(.*)" name-tmp="$1" />
    <map enum="XACT_CUE_STATE" flags="true" none="false"/>
    <map enum="XACT_WAVE_STATE" flags="true" none="false"/>
    <map enum="XACT_STOP_FLAGS" flags="true" none="false"/>
    <map enum="XACT_CREATION_FLAGS" flags="true" none="true"/>
    <map enum="XACT_CONTENT_PREPARATION_FLAGS" flags="true" none="false"/>
    <map enum="WAVEBANKMINIFORMAT_TAG" name="WaveBankMiniFormatTag"/>

    <map enum-item="XACT_CUESTATE_(.*)" name-tmp="$1"/>
    <map enum-item="XACT_FLAG_CUE_STOP_(.*)" name-tmp="$1"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_(.*)" name-tmp="$1"/>
    <map enum-item="MACRO_XACT_STATE_(.*)" name-tmp="$1"/>
    <map enum-item="MACRO_XACT_STATE_INUSE" name="InUse"/>
    <map enum-item="MACRO_XACT_STATE_PREPAREFAILED" name="PrepareFailed"/>
    <map enum-item="MACRO_XACT_FLAG_API_(.*)" name-tmp="$1"/>
    <map enum-item="MACRO_XACT_FLAG_(UNITS_.*)" name-tmp="$1"/>

    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_CUEPREPARED" name="CuePrepared"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_CUEPLAY" name="CuePlay"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_CUESTOP" name="CueStop"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_CUEDESTROYED" name="CueDestroyed"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_MARKER" name="Marker"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_SOUNDBANKDESTROYED" name="SoundBankDestroyed"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVEBANKDESTROYED" name="WaveBankDestroyed"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_LOCALVARIABLECHANGED" name="LocalVariableChanged"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_GLOBALVARIABLECHANGED" name="GlobalVariableChanged"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_GUICONNECTED" name="GuiConnected"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_GUIDISCONNECTED" name="GuiDisconnected"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVEPREPARED" name="WavePrepared"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVEPLAY" name="WavePlay"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVESTOP" name="WaveStop"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVELOOPED" name="WaveLooped"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVEDESTROYED" name="WaveDestroyed"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVEBANKPREPARED" name="WaveBankPrepared"/>
    <map enum-item="MACRO_XACT_NOTIFICATIONTYPE_WAVEBANKSTREAMING_INVALIDCONTENT" name="WaveBankStreamingInvalidContent"/>

    <map enum-item="WAVEBANKMINIFORMAT_TAG_(.*)" name-tmp="$1"/>

    <map enum="XACT_NOTIFICATION_TYPE" type="byte" visibility="public"/>
    
    <!--
    // *****************************************************************
    // XACT3 Structures
    // *****************************************************************
    -->
    <map struct="XACT_?(.*)" name-tmp="$1" />
    <remove struct="XACTCHANNEL.*"/>

    <map field=".*::[diawn]+([A-Z].*)" name="$1"/>
    <map field=".*::num([A-Z].*)s" name="$1Count"/>

    <map field=".*::pv?([A-Z].*)" name="$1Pointer"/>

    <map struct="XACT_SOUND_PROPERTIES" marshalto="true"/>
    <map struct="XACT_SOUND_VARIATION_PROPERTIES" marshalto="true"/>

    <map field="XACT_CUE_INSTANCE_PROPERTIES::allocAttributes" visibility="internal"/>

    <map field="XACT_CUE_PROPERTIES::interactive" name="IsInteractive"/>

    <map field="XACT_VARIATION_PROPERTIES::linger" name="ShouldLinger"/>

    <map struct="XACT_SOUND_PROPERTIES" native="true" struct-to-class="true" marshal="true" marshalto="true"/>
    <remove field="XACT_SOUND_PROPERTIES::numTracks"/>
    <!-- remove field in order to provide custom marshaling for this field - variable array at the end of the struct-->
    <remove field="XACT_SOUND_PROPERTIES::arrTrackProperties"/>

    <map field="XACT_RENDERER_DETAILS::rendererID" name="RendererId"/>
    <map field="XACT_RENDERER_DETAILS::defaultDevice" name="IsDefault"/>

    <map struct="XACT_RUNTIME_PARAMETERS" name="AudioEngineSettings" native="true" struct-to-class="true"/>
    <map field="XACT_RUNTIME_PARAMETERS::pRendererID" name="RendererId"/>
    <map field="XACT_RUNTIME_PARAMETERS::pXAudio2" visibility="internal"/>
    <map field="XACT_RUNTIME_PARAMETERS::pMasteringVoice" visibility="internal"/>    
    <map field="XACT_RUNTIME_PARAMETERS::pGlobalSettingsBuffer" visibility="internal"/>
    <map field="XACT_RUNTIME_PARAMETERS::globalSettingsAllocAttributes" visibility="internal"/>
    <map field="XACT_RUNTIME_PARAMETERS::globalSettingsBufferSize" visibility="internal"/>
    <map field="XACT_RUNTIME_PARAMETERS::globalSettingsFlags" visibility="internal"/>
    <map field="XACT_RUNTIME_PARAMETERS::fileIOCallbacks" visibility="internal"/>
    <map field="XACT_RUNTIME_PARAMETERS::fnNotificationCallback" visibility="internal"/>

    <map field="XACT_NOTIFICATION::type" type="XACT_NOTIFICATION_TYPE"/>
    <map field="XACT_NOTIFICATION_DESCRIPTION::type" type="XACT_NOTIFICATION_TYPE"/>

    <!-- Make all notification struct internal -->
    <map struct="XACT_NOTIFICATION_(.*)" name-tmp="Raw_Notification_$1" visibility="internal"/>

    <map field="XACT_WAVE_INSTANCE_PROPERTIES::backgroundMusic" name="IsBackgroundMusic" />

    <map field="XACT_WAVE_PROPERTIES::streaming" name="IsStreaming" />

    <map struct="WAVEBANKMINIWAVEFORMAT" name="WaveBankMiniWaveFormat" />

    <map field="WAVEBANKMINIWAVEFORMAT::wFormatTag" name="RawFormatTag" visibility="internal" />
    <map field="WAVEBANKMINIWAVEFORMAT::dwValue" visibility="internal" />
    <map field="WAVEBANKMINIWAVEFORMAT::nSamplesPerSec" name="SamplesPerSecond" />

    <map struct="WAVEBANKSAMPLEREGION" name="WaveBankSampleRegion"/>

    <map struct="WAVEBANKREGION" name="WaveBankRegion" visibility="internal"/>
    <map struct="WAVEBANKENTRY" name="WaveBankEntry" visibility="internal"/>
    <map struct="WAVEBANKENTRYCOMPACT" name="WaveBankEntryCompact" visibility="internal"/>
    <map struct="WAVEBANKHEADER" name="WaveBankHeader" visibility="internal"/>
    <map struct="WAVEBANKDATA" name="WaveBankData" visibility="internal"/>

    <map struct="XACT_FILEIO_CALLBACKS" name="FileIoCallbacks" visibility="internal"/>

    <!--
    // *****************************************************************
    // XACT3 Interfaces
    // *****************************************************************
    -->
    <map interface="IXACT3(.*)" name-tmp="$1" />
    <map interface="IXACT3Engine" name="AudioEngine" />

    <!-- Rename parameters -->
    <map param="IXACT3.*::.*::[undwszf]+([A-Z].*)" name-tmp="$1"/>
    <map param="IXACT3.*::.*::p[undwszf]+([A-Z].*)" name-tmp="p$1"/>

    <!-- Change all GetNum...s method to Get...Count -->
    <map method=".*::GetNum([A-Z].*)s" name="Get$1Count"/>

    <!-- Change dwFlags type for all Stop methods in order to use our enum -->
    <map param=".*::Stop::dwFlags" type="XACT_STOP_FLAGS"/>

    <!-- Change pMatrixCoefficients attribute to In Buffer -->
    <map param=".*::SetMatrixCoefficients::pMatrixCoefficients" attribute="in buffer"/>

    <!-- IXACT3Cue -->
    <remove method="IXACT3Cue::SetOutputVoices"/>
    <map param="IXACT3Cue::GetState::pdwState" type="XACT_CUE_STATE"/>
    <map param="IXACT3Cue::GetVariable::nValue" return="true"/>

    <!-- IXACT3Engine -->
    <map param="IXACT3Engine::GetGlobalVariable::nValue" return="true"/>
    <map param="IXACT3Engine::GetRendererDetails::pRendererDetails" return="true"/>

    <map method="IXACT3Engine::.*Notification" visibility="internal"/>

    <map method="IXACT3Engine::Create.*" visibility="internal"/>
    <map param="IXACT3Engine::Create.*::pp.*" attribute="out fast"/>
    <map method="IXACT3Engine::Prepare.*" visibility="internal"/>
    <map param="IXACT3Engine::Prepare.*::pp.*" attribute="out fast"/>
    <map method="IXACT3Engine::Initialize" visibility="internal"/>

    <!-- IXACT3SoundBank -->
    <map method="IXACT3SoundBank::GetState" visibility="internal" property="false"/>
    <map param="IXACT3SoundBank::GetCueProperties::pProperties" return="true"/>
    <map param="IXACT3SoundBank::.*::ppCue" return="true"/>   
    <map method="IXACT3SoundBank::Play" visibility="internal"/>
    <map method="IXACT3SoundBank::Prepare" visibility="internal"/>

    <!-- IXACT3WaveBank -->
    <map param="IXACT3WaveBank::.*::ppWave" return="true"/>
    <map method="IXACT3WaveBank::Play" visibility="internal" name="Play_"/>
    <map param="dwFlags" type="XACT_CONTENT_PREPARATION_FLAGS"/>
    <map method="IXACT3WaveBank::Prepare" visibility="internal" name="Prepare_"/>
    <map param="dwFlags" type="XACT_CONTENT_PREPARATION_FLAGS"/>

    <!-- IXACT3Wave -->
    <map param="IXACT3Wave::GetState::pdwState" type="XACT_WAVE_STATE"/>

    <!--
    // *****************************************************************
    // XACT3 Functions
    // *****************************************************************
    -->


    <context-clear />
  </mapping>
</config>